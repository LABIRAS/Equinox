-- drop tables
DROP TABLE IF EXISTS CONTAINERS;
DROP TABLE IF EXISTS STEADY_CONTRIBUTIONS;
DROP TABLE IF EXISTS INCREMENT_CONTRIBUTIONS;
DROP TABLE IF EXISTS DAMAGE_CONTRIBUTIONS;
DROP TABLE IF EXISTS PERMISSIONS;
DROP TABLE IF EXISTS ADMINS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS SETTINGS;
DROP TABLE IF EXISTS INPUT_SAMPLES;
DROP TABLE IF EXISTS VIDEOS;
DROP TABLE IF EXISTS EXCHANGE;
DROP TABLE IF EXISTS BUG_REPORTS;
DROP TABLE IF EXISTS ROADMAP;
DROP TABLE IF EXISTS INSTALLERS;
DROP TABLE IF EXISTS PLUGINS;
DROP TABLE IF EXISTS SPECTRA;
DROP TABLE IF EXISTS PILOT_POINT_ATTRIBUTE;
DROP TABLE IF EXISTS PILOT_POINT_TF_DC;
DROP TABLE IF EXISTS PILOT_POINT_DC;
DROP TABLE IF EXISTS PILOT_POINT_ST_RH;
DROP TABLE IF EXISTS PILOT_POINT_ST_FO;
DROP TABLE IF EXISTS PILOT_POINT_ST_NOP;
DROP TABLE IF EXISTS PILOT_POINT_DA;
DROP TABLE IF EXISTS PILOT_POINT_LC;
DROP TABLE IF EXISTS PILOT_POINT_TF_HS;
DROP TABLE IF EXISTS PILOT_POINT_TF_HO;
DROP TABLE IF EXISTS PILOT_POINT_TF_L;
DROP TABLE IF EXISTS PILOT_POINT_MP;
DROP TABLE IF EXISTS PILOT_POINT_IMAGE;
DROP TABLE IF EXISTS PILOT_POINT_DATA;
DROP TABLE IF EXISTS PILOT_POINTS;
DROP TABLE IF EXISTS MULT_TABLES;
DROP TABLE IF EXISTS FATIGUE_MATERIALS;
DROP TABLE IF EXISTS PREFFAS_MATERIALS;
DROP TABLE IF EXISTS LINEAR_MATERIALS;
DROP TABLE IF EXISTS ACCESS_REQUESTS;

-- create tables
CREATE TABLE IF NOT EXISTS CONTAINERS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	VERSION_NUMBER FLOAT NOT NULL,
	VERSION_DESCRIPTION VARCHAR(5000) NOT NULL,
	UPLOAD_DATE TIMESTAMP NOT NULL,
	OS_TYPE VARCHAR(50) NOT NULL,
	OS_ARCH VARCHAR(50) NOT NULL,
	DATA_SIZE BIGINT NOT NULL,
	DATA_URL VARCHAR(500) NOT NULL,
	UNIQUE(VERSION_NUMBER, OS_TYPE, OS_ARCH),
	INDEX(OS_TYPE, OS_ARCH, VERSION_NUMBER)
);
CREATE TABLE IF NOT EXISTS DAMAGE_CONTRIBUTIONS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	SPECTRUM_NAME VARCHAR(100) NOT NULL,
	PP_NAME VARCHAR(100) NOT NULL,
	AC_PROGRAM VARCHAR(100) NOT NULL, 
	AC_SECTION VARCHAR(100) NOT NULL, 
	FAT_MISSION VARCHAR(100) NOT NULL, 
	UNIQUE(SPECTRUM_NAME, PP_NAME),
	INDEX(PP_NAME),
	INDEX(SPECTRUM_NAME),
	INDEX(AC_PROGRAM),
	INDEX(AC_SECTION),
	INDEX(FAT_MISSION)
);
CREATE TABLE IF NOT EXISTS STEADY_CONTRIBUTIONS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DAMCONT_ID BIGINT NOT NULL, 
	GAG FLOAT, 
	DP FLOAT, 
	DT FLOAT, 
	ONEG FLOAT,
	FOREIGN KEY(DAMCONT_ID) REFERENCES DAMAGE_CONTRIBUTIONS(ID),
	INDEX(DAMCONT_ID)
);
CREATE TABLE IF NOT EXISTS INCREMENT_CONTRIBUTIONS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DAMCONT_ID BIGINT NOT NULL, 
	EVENT VARCHAR(100) NOT NULL, 
	CONTRIBUTION FLOAT NOT NULL, 
	FOREIGN KEY(DAMCONT_ID) REFERENCES DAMAGE_CONTRIBUTIONS(ID),
	INDEX(DAMCONT_ID)
);
CREATE TABLE IF NOT EXISTS USERS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	ALIAS VARCHAR(200) UNIQUE NOT NULL, 
	USERNAME VARCHAR(200) UNIQUE NOT NULL, 
	ORGANIZATION VARCHAR(200) NOT NULL, 
	EMAIL VARCHAR(200) NOT NULL, 
	IMAGE_URL VARCHAR(500),
	INDEX(ALIAS)
);
CREATE TABLE IF NOT EXISTS ADMINS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USER_ID BIGINT UNIQUE NOT NULL, 
	PASSWORD VARCHAR(100) NOT NULL, 
	FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
	INDEX(USER_ID)
);
CREATE TABLE IF NOT EXISTS PERMISSIONS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USER_ID BIGINT NOT NULL, 
	NAME VARCHAR(200) NOT NULL, 
	IS_ADMIN BIT NOT NULL, 
	UNIQUE(USER_ID, NAME), 
	FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
	INDEX(USER_ID),
	INDEX(USER_ID, NAME)
);
CREATE TABLE IF NOT EXISTS SETTINGS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(200) UNIQUE NOT NULL, 
	VAL VARCHAR(200) NOT NULL,
	INDEX(NAME)
);
CREATE TABLE IF NOT EXISTS INPUT_SAMPLES (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(200) UNIQUE NOT NULL, 
	DATA_SIZE BIGINT NOT NULL, 
	DATA_URL VARCHAR(500) NOT NULL,
	INDEX(NAME)
);
CREATE TABLE IF NOT EXISTS VIDEOS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(200) UNIQUE NOT NULL, 
	DURATION VARCHAR(50) NOT NULL, 
	DESCRIPTION VARCHAR(500) NOT NULL, 
	DATA_SIZE BIGINT NOT NULL, 
	DATA_URL VARCHAR(500) NOT NULL,
	INDEX(NAME)
);
CREATE TABLE IF NOT EXISTS EXCHANGE (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	OWNER VARCHAR(50) NOT NULL, 
	FILE_TYPE INT NOT NULL, 
	FILE_NAME VARCHAR(100) NOT NULL, 
	DATA_SIZE BIGINT NOT NULL, 
	DATA_URL VARCHAR(500) NOT NULL
);
CREATE TABLE IF NOT EXISTS BUG_REPORTS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	OWNER VARCHAR(50), 
	REPORT VARCHAR(1000) NOT NULL, 
	SYS_INFO VARCHAR(500), 
	EVENT_LOG VARCHAR(10000), 
	RECORDED DATETIME NOT NULL, 
	STATUS VARCHAR(20) NOT NULL, 
	SOLUTION VARCHAR(500),
	CLOSED_BY VARCHAR(200)
);
CREATE TABLE IF NOT EXISTS ROADMAP (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	OWNER VARCHAR(50), 
	TITLE VARCHAR(100) NOT NULL, 
	DESCRIPTION VARCHAR(1000), 
	RECORDED DATETIME NOT NULL, 
	LIKES INT NOT NULL, 
	STATUS VARCHAR(20) NOT NULL, 
	CLOSURE VARCHAR(1000),
	CLOSED_BY VARCHAR(200)
);
CREATE TABLE IF NOT EXISTS INSTALLERS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	VERSION_NUMBER FLOAT NOT NULL, 
	VERSION_DESCRIPTION VARCHAR(5000) NOT NULL, 
	UPLOAD_DATE DATETIME NOT NULL, 
	OS_TYPE VARCHAR(50) NOT NULL, 
	OS_ARCH VARCHAR(50) NOT NULL, 
	DATA_SIZE BIGINT NOT NULL, 
	DATA_URL VARCHAR(500) NOT NULL, 
	UNIQUE(VERSION_NUMBER, OS_TYPE, OS_ARCH),
	INDEX(OS_TYPE, OS_ARCH, VERSION_NUMBER)
);
CREATE TABLE IF NOT EXISTS PLUGINS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(200) UNIQUE NOT NULL, 
	JAR_NAME VARCHAR(500) UNIQUE NOT NULL, 
	DESCRIPTION VARCHAR(1000) NOT NULL, 
	VERSION_NUMBER FLOAT NOT NULL, 
	IMAGE_URL VARCHAR(500) NOT NULL, 
	DATA_SIZE BIGINT NOT NULL, 
	DEVELOPER_NAME VARCHAR(100) NOT NULL, 
	DEVELOPER_EMAIL VARCHAR(100) NOT NULL, 
	DATA_URL VARCHAR(500) NOT NULL,
	INDEX(NAME)
);
CREATE TABLE IF NOT EXISTS SPECTRA (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(100) UNIQUE NOT NULL, 
	AC_PROGRAM VARCHAR(100) NOT NULL, 
	AC_SECTION VARCHAR(100) NOT NULL, 
	FAT_MISSION VARCHAR(50) NOT NULL, 
	FAT_MISSION_ISSUE VARCHAR(10), 
	FLP_ISSUE VARCHAR(10), 
	IFLP_ISSUE VARCHAR(10), 
	CDF_ISSUE VARCHAR(10), 
	DELIVERY_REF VARCHAR(50), 
	DESCRIPTION VARCHAR(200), 
	DATA_SIZE BIGINT NOT NULL, 
	DATA_URL VARCHAR(500) NOT NULL,
	INDEX(NAME),
	INDEX(AC_PROGRAM),
	INDEX(AC_SECTION),
	INDEX(FAT_MISSION),
	INDEX(FAT_MISSION_ISSUE),
	INDEX(FLP_ISSUE),
	INDEX(IFLP_ISSUE),
	INDEX(CDF_ISSUE),
	INDEX(DELIVERY_REF),
	INDEX(DESCRIPTION)
);
CREATE TABLE IF NOT EXISTS PILOT_POINTS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	SPECTRUM_NAME VARCHAR(100) NOT NULL, 
	NAME VARCHAR(100) NOT NULL, 
	AC_PROGRAM VARCHAR(100) NOT NULL, 
	AC_SECTION VARCHAR(100) NOT NULL, 
	FAT_MISSION VARCHAR(50) NOT NULL, 
	DESCRIPTION VARCHAR(200), 
	ELEMENT_TYPE VARCHAR(50), 
	FRAME_RIB_POSITION VARCHAR(50), 
	STRINGER_POSITION VARCHAR(50), 
	DATA_SOURCE VARCHAR(50), 
	GENERATION_SOURCE VARCHAR(50), 
	DELIVERY_REF_NUM VARCHAR(50), 
	ISSUE VARCHAR(50), 
	FATIGUE_MATERIAL VARCHAR(500), 
	PREFFAS_MATERIAL VARCHAR(500), 
	LINEAR_MATERIAL VARCHAR(500), 
	EID VARCHAR(50), 
	UNIQUE(SPECTRUM_NAME, NAME),
	INDEX(SPECTRUM_NAME),
	INDEX(NAME),
	INDEX(AC_PROGRAM),
	INDEX(AC_SECTION),
	INDEX(FAT_MISSION),
	INDEX(DESCRIPTION),
	INDEX(ELEMENT_TYPE),
	INDEX(FRAME_RIB_POSITION),
	INDEX(STRINGER_POSITION),
	INDEX(DATA_SOURCE),
	INDEX(GENERATION_SOURCE),
	INDEX(DELIVERY_REF_NUM),
	INDEX(ISSUE),
	INDEX(FATIGUE_MATERIAL),
	INDEX(PREFFAS_MATERIAL),
	INDEX(LINEAR_MATERIAL),
	INDEX(EID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_DATA (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DATA_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_IMAGE (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_MP (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_TF_L (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_TF_HO (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_TF_HS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_LC (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_DA (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_ST_NOP (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_ST_FO (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_ST_RH (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_DC (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_TF_DC (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	IMAGE_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS PILOT_POINT_ATTRIBUTE (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	DATA_URL VARCHAR(500) NOT NULL, 
	FOREIGN KEY(ID) REFERENCES PILOT_POINTS(ID)
);
CREATE TABLE IF NOT EXISTS MULT_TABLES (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	SPECTRUM_NAME VARCHAR(100) NOT NULL, 
	PILOT_POINT_NAME VARCHAR(100), 
	NAME VARCHAR(100) NOT NULL, 
	AC_PROGRAM VARCHAR(100) NOT NULL, 
	AC_SECTION VARCHAR(100) NOT NULL, 
	FAT_MISSION VARCHAR(50) NOT NULL, 
	DESCRIPTION VARCHAR(200), 
	DELIVERY_REF_NUM VARCHAR(50), 
	ISSUE VARCHAR(50), 
	DATA_URL VARCHAR(500) NOT NULL, 
	UNIQUE(SPECTRUM_NAME, NAME),
	INDEX(SPECTRUM_NAME),
	INDEX(PILOT_POINT_NAME),
	INDEX(NAME),
	INDEX(AC_PROGRAM),
	INDEX(AC_SECTION),
	INDEX(FAT_MISSION),
	INDEX(DESCRIPTION),
	INDEX(DELIVERY_REF_NUM),
	INDEX(ISSUE)
);
CREATE TABLE IF NOT EXISTS FATIGUE_MATERIALS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(500) NOT NULL, 
	SPECIFICATION VARCHAR(500), 
	LIBRARY_VERSION VARCHAR(500), 
	FAMILY VARCHAR(500), 
	ORIENTATION VARCHAR(500), 
	CONFIGURATION VARCHAR(500), 
	PAR_P FLOAT NOT NULL, 
	PAR_Q FLOAT NOT NULL, 
	PAR_M FLOAT NOT NULL, 
	ISAMI_VERSION VARCHAR(500) NOT NULL
);
CREATE TABLE IF NOT EXISTS PREFFAS_MATERIALS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(500) NOT NULL, 
	SPECIFICATION VARCHAR(500), 
	LIBRARY_VERSION VARCHAR(500), 
	FAMILY VARCHAR(500), 
	ORIENTATION VARCHAR(500), 
	CONFIGURATION VARCHAR(500), 
	PAR_CEFF FLOAT NOT NULL, 
	PAR_M FLOAT NOT NULL, 
	PAR_A FLOAT NOT NULL, 
	PAR_B FLOAT NOT NULL, 
	PAR_C FLOAT NOT NULL, 
	PAR_FTU FLOAT NOT NULL, 
	PAR_FTY FLOAT NOT NULL, 
	ISAMI_VERSION VARCHAR(500) NOT NULL
);
CREATE TABLE IF NOT EXISTS LINEAR_MATERIALS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(500) NOT NULL, 
	SPECIFICATION VARCHAR(500), 
	LIBRARY_VERSION VARCHAR(500), 
	FAMILY VARCHAR(500), 
	ORIENTATION VARCHAR(500), 
	CONFIGURATION VARCHAR(500), 
	PAR_CEFF FLOAT NOT NULL, 
	PAR_M FLOAT NOT NULL, 
	PAR_A FLOAT NOT NULL, 
	PAR_B FLOAT NOT NULL, 
	PAR_C FLOAT NOT NULL, 
	PAR_FTU FLOAT NOT NULL, 
	PAR_FTY FLOAT NOT NULL, 
	ISAMI_VERSION VARCHAR(500) NOT NULL
);
CREATE TABLE IF NOT EXISTS ACCESS_REQUESTS (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	USER_ID BIGINT NOT NULL, 
	PERMISSION_NAME VARCHAR(200) NOT NULL, 
	IS_ADMIN_PERMISSION BIT NOT NULL, 
	RECORDED DATETIME NOT NULL, 
	STATUS VARCHAR(20) NOT NULL, 
	CLOSURE VARCHAR(1000), 
	CLOSED_BY VARCHAR(50), 
	UNIQUE(USER_ID, PERMISSION_NAME), 
	FOREIGN KEY(USER_ID) REFERENCES USERS(ID),
	INDEX(USER_ID)
);